name: Deploy to Development

on:
  push:
    branches:
      - devel

jobs:
  deploy:
    name: Deploy to Devel Environment
    runs-on: ubuntu-latest
    environment: devel

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '15'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run build
        env:
          REACT_APP_ENV: devel

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: terraform/environments/devel
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform/environments/devel
        run: terraform apply -auto-approve

      # ✅ Cleanly get S3 bucket name
      - name: Get S3 bucket name from Terraform
        id: tf_output
        run: |
          cd terraform/environments/devel
          echo "Fetching website_bucket_name from Terraform outputs..."
          BUCKET_NAME=$(terraform output -raw website_bucket_name 2>/dev/null | tr -d '\r')
          echo "bucket_name=${BUCKET_NAME}" >> $GITHUB_ENV
          echo "✅ Bucket name: ${BUCKET_NAME}"

      # ✅ Deploy to S3 using env variable
      - name: Deploy to S3
        run: |
          echo "Deploying to bucket: ${bucket_name}"
          aws s3 sync build/ s3://${bucket_name}/ --delete

      # ✅ Get CloudFront distribution ID safely
      - name: Get CloudFront Distribution ID
        id: cloudfront
        run: |
          cd terraform/environments/devel
          echo "Fetching CloudFront Distribution ID..."
          DIST_ID=$(terraform output -raw cloudfront_distribution_id 2>/dev/null | tr -d '\r')
          echo "distribution_id=${DIST_ID}" >> $GITHUB_ENV
          echo "✅ CloudFront Distribution ID: ${DIST_ID}"

      # ✅ Invalidate CloudFront cache
      - name: Invalidate CloudFront Cache
        run: |
          echo "Invalidating CloudFront cache for distribution: ${distribution_id}"
          aws cloudfront create-invalidation \
            --distribution-id ${distribution_id} \
            --paths "/*"

      - name: Deployment Complete
        run: |
          cd terraform/environments/devel
          echo "✅ Deployment to Development environment successful!"
          echo "CloudFront URL:"
          terraform output -raw cloudfront_domain_name 2>/dev/null | tr -d '\r\n' || true
