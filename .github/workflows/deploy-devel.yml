name: Deploy to Development

on:
  push:
    branches:
      - devel

jobs:
  deploy:
    name: Deploy to Devel Environment
    runs-on: ubuntu-latest
    environment: devel

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm ci

    - name: Build App
      run: npm run build

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8

    - name: Terraform Init & Apply
      run: |
        cd terraform/environments/devel
        terraform init -reconfigure
        terraform apply -auto-approve

    - name: Get S3 bucket name from Terraform
      id: tf_output
      run: |
        cd terraform/environments/devel
        echo "Fetching website_bucket_name from Terraform outputs..."
        BUCKET_NAME=$(terraform output -raw website_bucket_name)
        echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1   # change region if needed

    - name: Deploy to S3
      run: |
        echo "Deploying to bucket: ${{ steps.tf_output.outputs.bucket_name }}"
        aws s3 sync build/ s3://${{ steps.tf_output.outputs.bucket_name }}/ --delete

    - name: Invalidate CloudFront cache
      run: |
        cd terraform/environments/devel
        DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
        echo "Invalidating CloudFront cache for distribution: $DISTRIBUTION_ID"
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

    - name: Deployment Complete
      working-directory: terraform/environments/devel
      run: |
          set -euo pipefail
          echo "âœ… Deployment to Development environment successful!"
          echo "CloudFront URL:"
          terraform output -raw cloudfront_domain_name 2>/dev/null | tr -d '\r\n' || true
